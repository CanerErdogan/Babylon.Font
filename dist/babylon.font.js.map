{"version":3,"sources":["webpack://BF/webpack/bootstrap","webpack://BF/external \"BABYLON\"","webpack://BF/./src_wasm/node_modules/assemblyscript/lib/loader/index.js","webpack://BF/external \"opentype\"","webpack://BF/./src/compiler.ts","webpack://BF/./src/font.ts","webpack://BF/./src/babylon.font.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BABYLON","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","buffer","ptr","U32","Uint32Array","U16","Uint16Array","length","offset","String","fromCharCode","apply","subarray","parts","last","size","push","join","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","file","line","colm","Error","trace","console","log","Array","slice","arguments","Math","Date","postInstantiate","instance","rawExports","table","alloc","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","arr","align","buf","getTypedArrayImpl","Type","bufPtr","__allocString","str","charCodeAt","__getString","__allocArray","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","__getUint8Array","__getUint8ClampedArray","Uint8ClampedArray","__getInt16Array","__getUint16Array","__getInt32Array","__getUint32Array","__getInt64Array","__getUint64Array","__getFloat32Array","__getFloat64Array","__instanceof","baseId","demangle","wrapFunction","fn","setargc","wrap","args","original","instantiate","WebAssembly","Instance","elem","prop","internalName","split","curr","part","shift","hash","indexOf","className","substring","classElem","ctor","constructor","valueOf","this","thisValue","writable","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","test","replace","setter","instantiateBuffer","Module","instantiateStreaming","async","response","opentype","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","wasm","wasmUrl","_msg","_file","column","error","loader","fetch","arrayBuffer","cmds","DataView","x","y","M","codePointAt","L","Q","C","cmd","code","type","setUint8","setFloat64","x1","y1","x2","y2","bytesUsed","fmt","ppc","eps","max","min","round","abs","heap","byteLength","shapesPtr","compile","F64","shapesIn","shapesOut","shape","fill","holes","polygons","polygonPtr","vertices","vertexPtr","encode","compileEncoded","raw","compiler","fontUrl","err","otFont","opentypeLoadAsync","font","Metrics","getPath","commands","outlinesFormat","shapes","vec3","map","hole","option","scene","meshes","mesh","CreatePolygon","assign","MergeMeshes","ascender","unitsPerEm","descender","getAdvanceWidth"],"mappings":"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","file":"babylon.font.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = BABYLON;","\"use strict\";\r\n\r\n// Runtime header offsets\r\nconst ID_OFFSET = -8;\r\nconst SIZE_OFFSET = -4;\r\n\r\n// Runtime ids\r\nconst ARRAYBUFFER_ID = 0;\r\nconst STRING_ID = 1;\r\nconst ARRAYBUFFERVIEW_ID = 2;\r\n\r\n// Runtime type information\r\nconst ARRAYBUFFERVIEW = 1 << 0;\r\nconst ARRAY = 1 << 1;\r\nconst SET = 1 << 2;\r\nconst MAP = 1 << 3;\r\nconst VAL_ALIGN_OFFSET = 5;\r\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\r\nconst VAL_SIGNED = 1 << 10;\r\nconst VAL_FLOAT = 1 << 11;\r\nconst VAL_NULLABLE = 1 << 12;\r\nconst VAL_MANAGED = 1 << 13;\r\nconst KEY_ALIGN_OFFSET = 14;\r\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\r\nconst KEY_SIGNED = 1 << 19;\r\nconst KEY_FLOAT = 1 << 20;\r\nconst KEY_NULLABLE = 1 << 21;\r\nconst KEY_MANAGED = 1 << 22;\r\n\r\n// Array(BufferView) layout\r\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\r\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\r\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\r\nconst ARRAYBUFFERVIEW_SIZE = 12;\r\nconst ARRAY_LENGTH_OFFSET = 12;\r\nconst ARRAY_SIZE = 16;\r\n\r\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\r\nconst THIS = Symbol();\r\nconst CHUNKSIZE = 1024;\r\n\r\n/** Gets a string from an U32 and an U16 view on a memory. */\r\nfunction getStringImpl(buffer, ptr) {\r\n  const U32 = new Uint32Array(buffer);\r\n  const U16 = new Uint16Array(buffer);\r\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\r\n  var offset = ptr >>> 1;\r\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\r\n  const parts = [];\r\n  do {\r\n    const last = U16[offset + CHUNKSIZE - 1];\r\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\r\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\r\n    length -= size;\r\n  } while (length > CHUNKSIZE);\r\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\r\n}\r\n\r\n/** Prepares the base module prior to instantiation. */\r\nfunction preInstantiate(imports) {\r\n  const baseModule = {};\r\n\r\n  function getString(memory, ptr) {\r\n    if (!memory) return \"<yet unknown>\";\r\n    return getStringImpl(memory.buffer, ptr);\r\n  }\r\n\r\n  // add common imports used by stdlib for convenience\r\n  const env = (imports.env = imports.env || {});\r\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\r\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\r\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\r\n  }\r\n  env.trace = env.trace || function trace(mesg, n) {\r\n    const memory = baseModule.memory || env.memory;\r\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\r\n  }\r\n  imports.Math = imports.Math || Math;\r\n  imports.Date = imports.Date || Date;\r\n\r\n  return baseModule;\r\n}\r\n\r\n/** Prepares the final module once instantiation is complete. */\r\nfunction postInstantiate(baseModule, instance) {\r\n  const rawExports = instance.exports;\r\n  const memory = rawExports.memory;\r\n  const table = rawExports.table;\r\n  const alloc = rawExports[\"__alloc\"];\r\n  const retain = rawExports[\"__retain\"];\r\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\r\n\r\n  /** Gets the runtime type info for the given id. */\r\n  function getInfo(id) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const count = U32[rttiBase >>> 2];\r\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\r\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\r\n  }\r\n\r\n  /** Gets the runtime base id for the given id. */\r\n  function getBase(id) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const count = U32[rttiBase >>> 2];\r\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\r\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\r\n  }\r\n\r\n  /** Gets the runtime alignment of a collection's values. */\r\n  function getValueAlign(info) {\r\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\r\n  }\r\n\r\n  /** Gets the runtime alignment of a collection's keys. */\r\n  function getKeyAlign(info) {\r\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\r\n  }\r\n\r\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\r\n  function __allocString(str) {\r\n    const length = str.length;\r\n    const ptr = alloc(length << 1, STRING_ID);\r\n    const U16 = new Uint16Array(memory.buffer);\r\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.__allocString = __allocString;\r\n\r\n  /** Reads a string from the module's memory by its pointer. */\r\n  function __getString(ptr) {\r\n    const buffer = memory.buffer;\r\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\r\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\r\n    return getStringImpl(buffer, ptr);\r\n  }\r\n\r\n  baseModule.__getString = __getString;\r\n\r\n  /** Gets the view matching the specified alignment, signedness and floatness. */\r\n  function getView(alignLog2, signed, float) {\r\n    const buffer = memory.buffer;\r\n    if (float) {\r\n      switch (alignLog2) {\r\n        case 2: return new Float32Array(buffer);\r\n        case 3: return new Float64Array(buffer);\r\n      }\r\n    } else {\r\n      switch (alignLog2) {\r\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\r\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\r\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\r\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\r\n      }\r\n    }\r\n    throw Error(\"unsupported align: \" + alignLog2);\r\n  }\r\n\r\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\r\n  function __allocArray(id, values) {\r\n    const info = getInfo(id);\r\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\r\n    const align = getValueAlign(info);\r\n    const length = values.length;\r\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\r\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\r\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\r\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\r\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\r\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\r\n    if (info & VAL_MANAGED) {\r\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\r\n    } else {\r\n      view.set(values, buf >>> align);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  baseModule.__allocArray = __allocArray;\r\n\r\n  /** Gets a view on the values of an array in the module's memory. */\r\n  function __getArrayView(arr) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const id = U32[arr + ID_OFFSET >>> 2];\r\n    const info = getInfo(id);\r\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\r\n    const align = getValueAlign(info);\r\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\r\n    const length = info & ARRAY\r\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\r\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\r\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\r\n          .subarray(buf >>>= align, buf + length);\r\n  }\r\n\r\n  baseModule.__getArrayView = __getArrayView;\r\n\r\n  /** Reads (copies) the values of an array from the module's memory. */\r\n  function __getArray(arr) {\r\n    const input = __getArrayView(arr);\r\n    const len = input.length;\r\n    const out = new Array(len);\r\n    for (let i = 0; i < len; i++) out[i] = input[i];\r\n    return out;\r\n  }\r\n\r\n  baseModule.__getArray = __getArray;\r\n\r\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\r\n  function __getArrayBuffer(ptr) {\r\n    const buffer = memory.buffer;\r\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\r\n    return buffer.slice(ptr, ptr + length);\r\n  }\r\n\r\n  baseModule.__getArrayBuffer = __getArrayBuffer;\r\n\r\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\r\n    const buffer = memory.buffer;\r\n    const U32 = new Uint32Array(buffer);\r\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\r\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\r\n  }\r\n\r\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\r\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\r\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\r\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\r\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\r\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\r\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\r\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\r\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\r\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\r\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\r\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\r\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\r\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\r\n  if (BIGINT) {\r\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\r\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\r\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\r\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\r\n  }\r\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\r\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\r\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\r\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\r\n\r\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\r\n  function __instanceof(ptr, baseId) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\r\n    if (id <= U32[rttiBase >>> 2]) {\r\n      do if (id == baseId) return true;\r\n      while (id = getBase(id));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  baseModule.__instanceof = __instanceof;\r\n\r\n  // Pull basic exports to baseModule so code in preInstantiate can use them\r\n  baseModule.memory = baseModule.memory || memory;\r\n  baseModule.table  = baseModule.table  || table;\r\n\r\n  // Demangle exports and provide the usual utility on the prototype\r\n  return demangle(rawExports, baseModule);\r\n}\r\n\r\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\r\nfunction wrapFunction(fn, setargc) {\r\n  var wrap = (...args) => {\r\n    setargc(args.length);\r\n    return fn(...args);\r\n  }\r\n  wrap.original = fn;\r\n  return wrap;\r\n}\r\n\r\n/** Instantiates an AssemblyScript module using the specified imports. */\r\nfunction instantiate(module, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    new WebAssembly.Instance(module, imports)\r\n  );\r\n}\r\n\r\nexports.instantiate = instantiate;\r\n\r\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\r\nfunction instantiateBuffer(buffer, imports) {\r\n  return instantiate(new WebAssembly.Module(buffer), imports);\r\n}\r\n\r\nexports.instantiateBuffer = instantiateBuffer;\r\n\r\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\r\nasync function instantiateStreaming(response, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\r\n  );\r\n}\r\n\r\nexports.instantiateStreaming = instantiateStreaming;\r\n\r\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\r\nfunction demangle(exports, baseModule) {\r\n  var module = baseModule ? Object.create(baseModule) : {};\r\n  var setargc = exports[\"__setargc\"] || function() {};\r\n  function hasOwnProperty(elem, prop) {\r\n    return Object.prototype.hasOwnProperty.call(elem, prop);\r\n  }\r\n  for (let internalName in exports) {\r\n    if (!hasOwnProperty(exports, internalName)) continue;\r\n    let elem = exports[internalName];\r\n    let parts = internalName.split(\".\");\r\n    let curr = module;\r\n    while (parts.length > 1) {\r\n      let part = parts.shift();\r\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\r\n      curr = curr[part];\r\n    }\r\n    let name = parts[0];\r\n    let hash = name.indexOf(\"#\");\r\n    if (hash >= 0) {\r\n      let className = name.substring(0, hash);\r\n      let classElem = curr[className];\r\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\r\n        let ctor = function(...args) {\r\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\r\n        };\r\n        ctor.prototype = {\r\n          valueOf: function valueOf() {\r\n            return this[THIS];\r\n          }\r\n        };\r\n        ctor.wrap = function(thisValue) {\r\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\r\n        };\r\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\r\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\r\n        );\r\n        curr[className] = ctor;\r\n      }\r\n      name = name.substring(hash + 1);\r\n      curr = curr[className].prototype;\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\r\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\r\n          Object.defineProperty(curr, name, {\r\n            get: function() { return getter(this[THIS]); },\r\n            set: function(value) { setter(this[THIS], value); },\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else {\r\n        if (name === 'constructor') {\r\n          curr[name] = wrapFunction(elem, setargc);\r\n        } else { // for methods\r\n          Object.defineProperty(curr, name, {\r\n            value: function (...args) {\r\n              setargc(args.length);\r\n              return elem(this[THIS], ...args);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          Object.defineProperty(curr, name, {\r\n            get: exports[internalName.replace(\"set:\", \"get:\")],\r\n            set: exports[internalName.replace(\"get:\", \"set:\")],\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else if (typeof elem === \"function\") {\r\n        curr[name] = wrapFunction(elem, setargc);\r\n      } else {\r\n        curr[name] = elem;\r\n      }\r\n    }\r\n  }\r\n\r\n  return module;\r\n}\r\n\r\nexports.demangle = demangle;\r\n","module.exports = opentype;","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as loader from '../src_wasm/node_modules/assemblyscript/lib/loader';\r\n//\r\n// Compiler - A wrapper of glue codes\r\n//\r\nexport class Compiler {\r\n    constructor(wasm) {\r\n        this.wasm = wasm;\r\n    }\r\n    //\r\n    // Build Compiler\r\n    //\r\n    static Build(wasmUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const imports = {\r\n                env: {\r\n                    abort(_msg, _file, line, column) {\r\n                        console.error(\"abort called at\" + line + \":\" + column);\r\n                    },\r\n                },\r\n            };\r\n            //\r\n            // Instantiate\r\n            // https://caniuse.com/#search=instantiateStreaming\r\n            //\r\n            let wasm;\r\n            if (typeof WebAssembly.instantiateStreaming !== \"undefined\") {\r\n                wasm = yield loader.instantiateStreaming(fetch(wasmUrl), imports);\r\n            }\r\n            else {\r\n                const response = yield fetch(wasmUrl);\r\n                const buffer = yield response.arrayBuffer();\r\n                wasm = yield loader.instantiateBuffer(buffer, imports);\r\n            }\r\n            return new Compiler(wasm);\r\n        });\r\n    }\r\n    //\r\n    // Encode OpentypeJS IPathCommand[], put into {buffer}\r\n    // \r\n    encode(cmds, buffer) {\r\n        const view = new DataView(buffer);\r\n        let i = 0;\r\n        let x = 0;\r\n        let y = 0;\r\n        const M = 'M'.codePointAt(0);\r\n        const L = 'L'.codePointAt(0);\r\n        const Q = 'Q'.codePointAt(0);\r\n        const C = 'C'.codePointAt(0);\r\n        for (const cmd of cmds) {\r\n            let code = cmd.type.codePointAt(0);\r\n            view.setUint8(i, code);\r\n            i++;\r\n            switch (code) {\r\n                case M:\r\n                case L:\r\n                    view.setFloat64(i, cmd.x, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y, true);\r\n                    i += 8;\r\n                    x = cmd.x;\r\n                    y = cmd.y;\r\n                    break;\r\n                case Q:\r\n                    view.setFloat64(i, x, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, y, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.x1, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y1, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.x, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y, true);\r\n                    i += 8;\r\n                    x = cmd.x;\r\n                    y = cmd.y;\r\n                    break;\r\n                case C:\r\n                    view.setFloat64(i, x, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, y, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.x1, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y1, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.x2, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y2, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.x, true);\r\n                    i += 8;\r\n                    view.setFloat64(i, cmd.y, true);\r\n                    i += 8;\r\n                    x = cmd.x;\r\n                    y = cmd.y;\r\n                    break;\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n    //\r\n    // Compile encoded IPathCommand[] in {buffer}\r\n    //\r\n    compileEncoded(buffer, bytesUsed, fmt, ppc, eps) {\r\n        ppc = Math.max(0, Math.min(255, Math.round(ppc)));\r\n        eps = Math.abs(eps);\r\n        // \r\n        // Load into wasm.memory if needed\r\n        //\r\n        if (buffer !== this.wasm.memory.buffer) {\r\n            const heap = this.wasm.memory.buffer;\r\n            for (let i = 0, L = buffer.byteLength; i < L; ++i) {\r\n                heap[i] = buffer[i];\r\n            }\r\n        }\r\n        const shapesPtr = this.wasm.compile(bytesUsed, fmt, ppc, eps);\r\n        //\r\n        // Map to JS Objects\r\n        //\r\n        const F64 = new Float64Array(this.wasm.memory.buffer);\r\n        const shapesIn = this.wasm.__getUint32Array(shapesPtr);\r\n        const shapesOut = new Array(shapesIn.length);\r\n        for (let i = 0; i < shapesIn.length; i++) {\r\n            const shape = { fill: [], holes: [] };\r\n            const polygons = this.wasm.__getUint32Array(shapesIn[i]);\r\n            for (const polygonPtr of polygons) {\r\n                const vertices = this.wasm.__getUint32Array(polygonPtr);\r\n                let arr;\r\n                if (shape.fill.length === 0) {\r\n                    arr = shape.fill;\r\n                }\r\n                else {\r\n                    shape.holes.push(arr = []);\r\n                }\r\n                for (const vertexPtr of vertices) {\r\n                    arr.push([\r\n                        F64[(vertexPtr >>> 3) + 0],\r\n                        F64[(vertexPtr >>> 3) + 1] // y\r\n                    ]);\r\n                }\r\n            }\r\n            shapesOut[i] = shape;\r\n        }\r\n        return shapesOut;\r\n    }\r\n    //\r\n    // Compile non-encoded IPathCommand[]\r\n    //\r\n    compile(cmds, fmt, ppc, eps) {\r\n        const buffer = this.wasm.memory.buffer;\r\n        const bytesUsed = this.encode(cmds, this.wasm.memory.buffer);\r\n        return this.compileEncoded(buffer, bytesUsed, fmt, ppc, eps);\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as opentype from 'opentype.js';\r\nimport * as BABYLON from 'babylonjs';\r\n//\r\n// Font\r\n//\r\nexport class Font {\r\n    constructor(raw, compiler) {\r\n        this.raw = raw;\r\n        this.compiler = compiler;\r\n    }\r\n    static Install(fontUrl, compiler) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const raw = yield opentypeLoadAsync(fontUrl);\r\n            return new Font(raw, compiler);\r\n        });\r\n    }\r\n    static Measure(font, name, size) {\r\n        return new Metrics(font, name, size);\r\n    }\r\n    static Compile(font, name, size, ppc, eps) {\r\n        const cmds = font.raw.getPath(name, 0, 0, size).commands;\r\n        const fmt = font.raw.outlinesFormat;\r\n        const shapes = font.compiler.compile(cmds, fmt, ppc, eps * size);\r\n        const vec3 = ([x, y]) => new BABYLON.Vector3(x, 0, -y);\r\n        const result = [];\r\n        for (const { fill, holes } of shapes) {\r\n            const shape = {\r\n                fill: fill.map(vec3),\r\n                holes: holes.map(hole => hole.map(vec3))\r\n            };\r\n            result.push(shape);\r\n        }\r\n        return result;\r\n    }\r\n    static BuildMesh(shapes, option, scene) {\r\n        const meshes = [];\r\n        for (const { fill, holes } of shapes) {\r\n            const mesh = BABYLON.MeshBuilder.CreatePolygon('', Object.assign(Object.assign({}, option), { shape: fill, holes: holes }), scene);\r\n            meshes.push(mesh);\r\n        }\r\n        if (meshes.length > 0) {\r\n            return BABYLON.Mesh.MergeMeshes(meshes, true, true);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n//\r\n// Metrics - Result of Measure()\r\n//\r\nexport class Metrics {\r\n    constructor(font, name, size) {\r\n        this.font = font;\r\n        this.name = name;\r\n        this.size = size;\r\n    }\r\n    get ascender() {\r\n        return this.font.raw.ascender\r\n            / this.font.raw.unitsPerEm\r\n            * this.size;\r\n    }\r\n    get descender() {\r\n        return this.font.raw.descender\r\n            / this.font.raw.unitsPerEm\r\n            * this.size;\r\n    }\r\n    get advanceWidth() {\r\n        return this.font.raw.getAdvanceWidth(this.name, this.size);\r\n    }\r\n}\r\n//\r\n// Helper: opentype.load async\r\n//\r\nfunction opentypeLoadAsync(fontUrl) {\r\n    return new Promise((resolve, reject) => {\r\n        opentype.load(fontUrl, (err, otFont) => {\r\n            if (err) {\r\n                reject(err);\r\n            }\r\n            else {\r\n                resolve(otFont);\r\n            }\r\n        });\r\n    });\r\n}\r\n","export { Compiler } from './compiler';\r\nexport { Font } from './font';\r\n"],"sourceRoot":""}