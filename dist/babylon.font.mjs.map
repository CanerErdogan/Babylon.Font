{"version":3,"file":"babylon.font.mjs","sources":["../node_modules/@assemblyscript/loader/index.js"],"sourcesContent":["\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a view on the values of an array in the module's memory. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Reads (copies) the values of an array from the module's memory. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\n  }\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  wrap.original = fn;\n  return wrap;\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports[\"__setargc\"] || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[THIS], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n"],"names":["ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","Symbol","CHUNKSIZE","getStringImpl","buffer","ptr","String","fromCharCode","U32","Uint32Array","U16","Uint16Array","length","offset","apply","subarray","parts","last","size","push","join","preInstantiate","imports","getString","memory","baseModule","env","abort","mesg","file","line","colm","Error","trace","n","console","log","Array","prototype","slice","call","arguments","Math","Date","postInstantiate","instance","getInfo","id","count","rttiBase","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","arr","align","buf","getTypedArrayImpl","Type","bufPtr","rawExports","exports","table","alloc","retain","__allocString","str","i","charCodeAt","__getString","__allocArray","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","bind","__getUint8Array","__getUint8ClampedArray","Uint8ClampedArray","__getInt16Array","__getUint16Array","__getInt32Array","__getUint32Array","__getInt64Array","__getUint64Array","__getFloat32Array","__getFloat64Array","__instanceof","baseId","demangle","wrapFunction","fn","setargc","wrap","args","original","isResponse","o","Response","instantiate","source","instantiateStreaming","WebAssembly","Module","compile","arrayBuffer","hasOwnProperty","elem","prop","Object","module","create","internalName","split","curr","part","shift","name","hash","indexOf","className","substring","classElem","ctor","constructor","valueOf","thisValue","value","writable","getOwnPropertyNames","forEach","defineProperty","getOwnPropertyDescriptor","test","getter","replace","setter","get","enumerable"],"mappings":"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"}