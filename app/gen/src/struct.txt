# JSON Structure

{ ascender: <number>
  descender: <number>
  chars: array of 
    { name: <number>
      advanceWidth: <number>
      data: null | {
        positions: array of <number>
        indices: array of <number>
        uvs: array of <number>
        normals: array of <number>
      }
    }
}



# Binary Structure 

u32   # version
      #
f32   # ascender
f32   # descender
u32   # nChar
      #
u32   # codepoint
f32   # advanceWidth
u32   # dataMeta (bit0=has data or not) 
u32   # szPositions .. size of positions[] in byte
u32   # szIndices .... size of indices[] in byte
u32   # szUvs ........ size of uvs[] in byte
u32   # szNormals .... size of normals[] in byte
f32.. # positions[] data (f32)
u32.. # indices[] data (u32)
f32.. # uvs[] data (f32)
f32.. # normals[] data (f32)
      #
u32   # codepoint (next char begins) 
..


